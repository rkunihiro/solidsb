{"mappings":"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","sources":["node_modules/solid-js/dist/solid.js","node_modules/solid-js/web/dist/web.js","src/component/item.tsx","src/component/app.tsx","src/main.tsx"],"sourcesContent":["let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n        owner = Owner,\n        root = fn.length === 0 && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner || owner\n  };\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(() => fn(() => cleanNode(root)), true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.pending !== NOTPENDING ? s.pending : s.tValue);else value = value(s.pending !== NOTPENDING ? s.pending : s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n    fn ? fn() : untrack(onInvalidate);\n    fn = undefined;\n  }, undefined, false, 0),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(source, fetcher, options) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = source;\n      source = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = source;\n    source = true;\n  }\n  options || (options = {});\n  const contexts = new Set(),\n        [value, setValue] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, {\n    equals: false\n  }),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      scheduled = false,\n      resolved = (\"initialValue\" in options),\n      dynamic = typeof source === \"function\" && createMemo(source);\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.load) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, e, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if (initP && (p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = null;\n      setError(err = e);\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      setValue(() => v);\n      setLoading(false);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = value();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching && scheduled) return;\n    scheduled = false;\n    setError(err = undefined);\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        if (err) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) !== fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  let result;\n  const q = Pending = [];\n  try {\n    result = fn();\n  } finally {\n    Pending = null;\n  }\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return runUpdates(fn, true);\n  } finally {\n    Owner = prev;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    batch(fn);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    const updates = Updates;\n    Updates = null;\n    !runningTransition && this.state === STALE || runningTransition && this.tState === STALE ? updateComputation(this) : lookUpstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  if (Pending) {\n    if (node.pending === NOTPENDING) Pending.push(node);\n    node.pending = value;\n    return value;\n  }\n  if (node.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(node)) {\n      if (node.comparator(node.tValue, value)) return value;\n    } else if (node.comparator(node.value, value)) return value;\n  }\n  let TransitionRunning = false;\n  if (Transition) {\n    TransitionRunning = Transition.running;\n    if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n      Transition.sources.add(node);\n      node.tValue = value;\n    }\n    if (!TransitionRunning) node.value = value;\n  } else node.value = value;\n  if (node.observers && node.observers.length) {\n    runUpdates(() => {\n      for (let i = 0; i < node.observers.length; i += 1) {\n        const o = node.observers[i];\n        if (TransitionRunning && Transition.disposed.has(o)) continue;\n        if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n          if (o.pure) Updates.push(o);else Effects.push(o);\n          if (o.observers) markDownstream(o);\n        }\n        if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        if (false) ;\n        throw new Error();\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        runComputation(node, node.tValue, time);\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n          prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      lookUpstream(node, ancestors[0]);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Updates = null;\n    if (!wait) Effects = null;\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size || Transition.queue.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    res = Transition.resolve;\n    Effects.forEach(e => {\n      \"tState\" in e && (e.state = e.tState);\n      delete e.tState;\n    });\n    Transition = null;\n    batch(() => {\n      sources.forEach(v => {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n        v.tState = 0;\n      });\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n          if (!tasks.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  fns.forEach(f => f(err));\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    let res;\n    createComputed(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }));\n    return res;\n  };\n}\n\nfunction getSymbol() {\n  const SymbolCopy = Symbol;\n  return SymbolCopy.observable || \"@@observable\";\n}\nfunction observable(input) {\n  const $$observable = getSymbol();\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = \"next\" in observer ? observer.next.bind(observer) : observer;\n      let complete = false;\n      createComputed(() => {\n        if (complete) return;\n        const v = input();\n        untrack(() => handler(v));\n      });\n      return {\n        unsubscribe() {\n          complete = true;\n        }\n      };\n    },\n    [$$observable]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return (s = typeof s === \"function\" ? s() : s) == null ? {} : s;\n}\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = resolveSource(sources[i])[property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in resolveSource(sources[i])) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        }\n      });\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    } else {\n      const c = comp();\n      if (c) return c(props);\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, {\n    equals: (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nconst NoErrors = {};\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn(NoErrors));\n}\nfunction ErrorBoundary(props) {\n  let err = NoErrors;\n  if (sharedConfig.context && sharedConfig.load) {\n    err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count) || NoErrors;\n  }\n  const [errored, setErrored] = createSignal(err);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if ((e = errored()) !== NoErrors) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(NoErrors))) : f;\n    }\n    onError(setErrored);\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let index = 0,\n      suspenseSetter,\n      showContent,\n      showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const registry = [],\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        registry[index++] = {\n          inFallback,\n          showContent,\n          showFallback\n        };\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = registry.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      registry.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = registry.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = registry[n].inFallback();\n      if (!stop && !s) {\n        registry[n].showContent(visibleContent);\n        registry[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          registry[n].showFallback(visibleFallback);\n        } else registry[n].showFallback(false);\n        stop = true;\n        registry[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback,\n      ctx,\n      p,\n      flicker,\n      error;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  },\n        owner = getOwner();\n  if (sharedConfig.context) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    p = sharedConfig.load(key);\n    if (p) {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if ((error = err) || sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === undefined) setHydrateContext();\n        const rendered = untrack(() => props.children);\n        return createMemo(() => {\n          const inFallback = store.inFallback(),\n                visibleContent = showContent ? showContent() : true,\n                visibleFallback = showFallback ? showFallback() : true;\n          dispose && dispose();\n          if ((!inFallback || p !== undefined) && visibleContent) {\n            store.resolved = true;\n            ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered;\n          }\n          if (!visibleFallback) return;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, enableHydration, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst PropAliases = {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\"]);\n\nfunction memo(fn, equals) {\n  return createMemo(fn, undefined, !equals ? {\n    equals\n  } : undefined);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  const prevString = typeof prev === \"string\";\n  if (value == null && prevString || typeof value === \"string\") return nodeStyle.cssText = value;\n  prevString && (nodeStyle.cssText = undefined, prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = globalThis._$HY.load;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  gatherHydratable(element, options.renderId);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) {\n      value(node);\n    }\n  } else if (prop.slice(0, 3) === \"on:\") {\n    node.addEventListener(prop.slice(3), value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    node.addEventListener(prop.slice(10), value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    addEventListener(node, name, value, delegate);\n    delegate && delegateEvents([name]);\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach(elem => elem.remove());\n  }\n  while (node !== null) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  props || (props = {});\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  props.ref && props.ref(node);\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current) current = [...parent.childNodes];\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (sharedConfig.context) return current;\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].parentNode) return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (Array.isArray(current)) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction Assets() {\n  return;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction ssrHydrationKey() {}\nfunction escape(html) {}\nfunction generateHydrationScript() {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Assets as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, generateHydrationScript, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, innerHTML, insert, isServer, memo, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrHydrationKey, ssrSpread, ssrStyle, style, template };\n","import { onCleanup, onError, onMount } from \"solid-js\";\n\ninterface Props {\n    value: string;\n}\n\nexport function Item({ value }: Props) {\n    onMount(() => {\n        console.log(\"Item#onMount\");\n    });\n\n    onCleanup(() => {\n        console.log(\"Item#onCleanup\");\n    });\n\n    onError((err) => {\n        console.error(err);\n    });\n\n    console.log(\"Item#render\");\n    return <div>{value}</div>;\n}\n","import { createSignal, For, onCleanup, onError, onMount } from \"solid-js\";\n\nimport { Item } from \"./item\";\n\nexport function App() {\n    const [getItems, setItems] = createSignal<string[]>([]);\n\n    onMount(() => {\n        console.log(\"App#onMount\");\n    });\n\n    onCleanup(() => {\n        console.log(\"App#onCleanup\");\n    });\n\n    onError((err) => {\n        console.error(err);\n    });\n\n    const addItem = (item: string) => {\n        setItems((prev) => [item, ...prev]);\n    };\n\n    console.log(\"App#render\");\n    return (\n        <>\n            <header>\n                <h1>Solid.JS sandbox</h1>\n                <div>\n                    <a href={\"https://www.solidjs.com/\"}>https://www.solidjs.com/</a>\n                </div>\n            </header>\n            <main>\n                <div>\n                    <button onClick={() => addItem(new Date().toISOString())}>add</button>\n                    <button onClick={() => setItems([])}>clear</button>\n                </div>\n                <For each={getItems()} fallback={null}>\n                    {(value) => <Item value={value} />}\n                </For>\n            </main>\n        </>\n    );\n}\n","import { render } from \"solid-js/web\";\n\nimport { App } from \"./component/app\";\n\nconst container = document.getElementById(\"container\");\nif (container) {\n    render(() => <App />, container);\n}\n"],"names":["$8863cd8fe199f948$export$2cb4986bed338027","$8863cd8fe199f948$var$setHydrateContext","context","$8863cd8fe199f948$export$34b67c27f2ca7498","a","b","$8863cd8fe199f948$export$17a675b7c02a7b1d","Symbol","$8863cd8fe199f948$var$signalOptions","equals","$8863cd8fe199f948$var$ERROR","$8863cd8fe199f948$var$runEffects","$8863cd8fe199f948$var$runQueue","$8863cd8fe199f948$var$NOTPENDING","$8863cd8fe199f948$var$UNOWNED","owned","cleanups","owner","$8863cd8fe199f948$var$transPending","$8863cd8fe199f948$var$setTransPending","$8863cd8fe199f948$export$c1e1e1ecbbe76a5","$8863cd8fe199f948$var$Owner","$8863cd8fe199f948$var$SuspenseContext","$8863cd8fe199f948$var$Transition","$8863cd8fe199f948$var$Scheduler","$8863cd8fe199f948$var$ExternalSourceFactory","$8863cd8fe199f948$var$Listener","$8863cd8fe199f948$var$Pending","$8863cd8fe199f948$var$Updates","$8863cd8fe199f948$var$Effects","$8863cd8fe199f948$var$ExecCount","$8863cd8fe199f948$export$882461b6382ed46c","fn","detachedOwner","listener","root","length","$8863cd8fe199f948$var$runUpdates","$8863cd8fe199f948$var$cleanNode","value1","options","Object","assign","s","value","observers","observerSlots","pending","comparator","undefined","$8863cd8fe199f948$var$readSignal","bind","running","sources","has","tValue","$8863cd8fe199f948$var$writeSignal","$8863cd8fe199f948$export$234a23cdc77e6a3d","c","$8863cd8fe199f948$var$createComputation","push","$8863cd8fe199f948$var$updateComputation","$8863cd8fe199f948$export$314dade334ae905d","$8863cd8fe199f948$export$c0c6c8b9c16bf6aa","tState","$8863cd8fe199f948$export$712ea50be43a7858","result","q","i","data","$8863cd8fe199f948$export$363ebc4b78b8f807","$8863cd8fe199f948$export$1e848a9e87980bd5","$8863cd8fe199f948$var$runUserEffects","$8863cd8fe199f948$var$lookup","id","suspense","user","$8863cd8fe199f948$export$7ea7134f704deda4","$8863cd8fe199f948$export$b36e5eaa3e8c43ab","$8863cd8fe199f948$export$2288787135a8f66e","$8863cd8fe199f948$export$7568632d0d33d16d","done","l","o","Promise","resolve","then","t","Set","effects","promises","disposed","queue","res","$8863cd8fe199f948$export$fd42f52fd3ae1109","defaultValue","Provider","$8863cd8fe199f948$var$createProvider","$8863cd8fe199f948$export$bacb5cc5a11aef16","children1","$8863cd8fe199f948$var$resolveChildren","runningTransition","this","state","updates","$8863cd8fe199f948$var$lookUpstream","sSlot","sourceSlots","node","isComp","TransitionRunning","add","pure","$8863cd8fe199f948$var$markDownstream","Error","time","$8863cd8fe199f948$var$runComputation","queueMicrotask","nextValue","err","$8863cd8fe199f948$var$handleError","updatedAt","init","tOwned","track","trigger","ordinary","dispose","triggerInTransition","inTransition","x","$8863cd8fe199f948$var$runTop","inFallback","ancestors","top","prev","wait","item","tasks","delete","size","apply","$8863cd8fe199f948$var$scheduleQueue","forEach","e","v","len","$8863cd8fe199f948$var$completeUpdates","userLength","resume","ignore","source","pop","index","obs","n","$8863cd8fe199f948$var$reset","fns","f","key","children2","Array","isArray","results","props","children","$8863cd8fe199f948$var$FALLBACK","$8863cd8fe199f948$var$dispose","d","$8863cd8fe199f948$var$hydrationEnabled","$8863cd8fe199f948$export$60e54eaca7e7fb38","Comp","count","r","$8863cd8fe199f948$export$bdf530073099ce9f","fallback","list","mapFn","items","mapped","disposers","indexes","j","newItems","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","newLen","disposer","mapper","Math","min","Map","get","set","slice","$8863cd8fe199f948$export$4c9116dcf1374231","each","$6258376c5c54faa9$export$b3890eb0ae9dca99","code","element","document","$6258376c5c54faa9$export$21a5ca8aa77d35ff","firstChild","textContent","$6258376c5c54faa9$export$ce69bd05624d0c48","html","check","isSVG","createElement","innerHTML","content","$6258376c5c54faa9$export$ad0f7f87f67e17d6","eventNames","window","name","addEventListener","$6258376c5c54faa9$var$eventHandler","parent","accessor","marker","initial","$6258376c5c54faa9$var$insertExpression","current","type","composedPath","target","defineProperty","configurable","registry","querySelectorAll","elem","remove","handler","disabled","cancelBubble","host","Node","parentNode","unwrapArray","childNodes","multi","toString","nodeType","createTextNode","$6258376c5c54faa9$var$cleanChildren","array","$6258376c5c54faa9$var$normalizeIncomingArray","$6258376c5c54faa9$var$appendNodes","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","sequence","replaceChild","$6258376c5c54faa9$var$reconcileArrays","appendChild","normalized","unwrap","dynamic","replacement","inserted","el","isParent","Item","onMount","console","log","onCleanup","onError","error","_el$","$6b871fe09e41662d$var$_tmpl$","cloneNode","App","getItems","setItems","createSignal","$cb8921187008223d$var$_tmpl$","_el$2","$cb8921187008223d$var$_tmpl$2","_el$4","_el$5","$$click","addItem","Date","toISOString","$6b871fe09e41662d$export$6d08773d2e66f8f2","container","getElementById","render","$cb8921187008223d$export$86fbec116b87613f"],"version":3,"file":"index.a89578c7.js.map"}